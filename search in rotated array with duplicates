class Solution {
public:
    /*check for duplicates from start and end and then decrease the size of window*/
    bool search(vector<int>& nums, int target) {
        int start=0;
        int end=nums.size()-1;
        while(start<=end){
             int mid=start+(end-start)/2;
            if(nums[mid]==target){
                return true;
            }
            if(start+1<nums.size()&&nums[start]==nums[start+1]){
                start++;
                continue;
            }
              if(end-1>=0&&nums[end]==nums[end-1]){
                end--;
                  continue;
            }
            
           
             if(nums[mid]<=target){
                 if(target==nums[mid]){
                     return true;
                 }
         else if(nums[mid]<=nums[start])
                   if(target<=nums[end])
                       start=mid+1;
                 else
                     end=mid-1;
        else
            start=mid+1;
             }
            else{
               if(nums[mid]>nums[end]){
                   if(target>=nums[start])
                       end=mid-1;
                  else
                   start=mid+1;
               }
                
            
            else
             end=mid-1;
                }
        }
        return false;
    }
};
