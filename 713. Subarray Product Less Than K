class Solution {
public:
    
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        
        int count=0;
        for(int i=0;i<nums.size();i++){
            if(nums[i]<k){
                count++;
            }
        }
        int l=0;
        int r=1;
        int a=nums[l];
        while(r<nums.size()&&l<r){
           if(nums[r]*a<k){
              
               if(r<nums.size()-1){
                   
                  
                    a*=nums[r];
                   count++;
                   count+=(r-l-1);//considered between elements as they will definetly form part of subarray
                   
                   r++;
                     continue;                
               }
               count++;
               count+=(r-l-1);//considered between elements as they will definetly form part of subarray
               if(r==nums.size()-1){
                   break;
               }
               continue;
           }
            while(l<r&&a*nums[r]>=k){
                a/=nums[l];
                
                l++;
            }
            if(l==r){
                if(r==nums.size()-1){
                    break;
                }
                a=nums[l];
                r++;
                continue;
            }
            
        }
        return count;
    }
};
