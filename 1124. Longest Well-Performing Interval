class Solution {
public:
    int longestWPI(vector<int>& hours) {
        vector<int>store(hours.size(),0);
        unordered_map<int,int>id;
        int ans=0;
        int s1=0;
        for(int i=0;i<hours.size();i++){//greater than 8 is 1 and less than 8 is -1 ,then we take prefix sum
           if(hours[i]>8){
               store[i]=1;
           }
            else{
                store[i]=-1;
            }
            s1+=store[i];
            store[i]=s1;
            if(id.find(store[i])==id.end()){
                id[store[i]]=i;
            }
            if(store[i]>0){
                ans=max(ans,i+1);
            }
            if(id.find(store[i]-1)!=id.end()){
                ans=max(ans,i-id[store[i]-1]);
            }
        }
  return ans;
       
    }
};
